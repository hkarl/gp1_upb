#+INCLUDE: "../template/header.org" :minlevel 2
#+TITLE: Kapitel 0: Organisation 

#+STARTUP: showeverything
# TODO states: looks like this has to go on main file and cannot be
# included 
#+TODO: TODO(t) | UEBUNG(u) DONE(d)
#+OPTIONS: tasks:todo


* Vorstellung 
** Setup 						  :skipslide:nolatex:
   
Main point here is to set up warnings properly for presentation and to
load tutormagic, so that we can later on use pythontutor for code
animations. 
   
#+BEGIN_SRC  Python 
%load_ext tutormagic
import warnings
warnings.filterwarnings('ignore', category=DeprecationWarning, module='.*/IPython/.*')

import requests
import webbrowser
from IPython.core.magic import register_line_magic

pingo_token = "BRx9QJP7rjdUGBq3x4hP"

# Test-Session: 
pingo_url = "https://pingo.upb.de/events/311055/quick_start.json"
# Produktiv-Session: 
# pingo_url = "https://pingo.upb.de/events/204051/quick_start.json"

pingo_duration = '30'
pingo_type = "single"

@register_line_magic
def pingo(line):
    params = {'survey_name': pingo_title, 
              'predef_options': pingo_questions, 
              'q_type': pingo_type,
              'duration': pingo_duration, 
              'auth_token': pingo_token}

    r = requests.post(pingo_url, json=params)
    webbrowser.open_new_tab("https://pingo.upb.de" + r.headers['Location'])
#+END_SRC





** Herzlich Willkommen!

- an der Universität Paderborn 
- zum Studium der Informatik, des Computer Engineerings, ...
- zur Vorlesung  Programmierung 

** Wer sind wir? 

- Dozent: Holger Karl
- Mitarbeiter: Alexander Bigerl 
- Tutoren: Patrick Bollmann, David Buderus,  Nadine Dettelbach,  Nils Horstmann, Tim Ofenbach, Rafael Schellenberg, Julian Schlenker,  Michael Schulz, Ninab Youkanna



** Wer sind wir?  -- Dozent					   :subslide:

- Holger Karl 
- Fachgebiet Rechnernetze 
- Büro: Pohlweg, O3.158
- Email: holger.karl@upb.de
- Web: http://www.upb.de/cs/cn
- Sprechstunde: Montag, 13:00 - 14:00 Uhr 

** Wer sind wir? -- Mitarbeiter					   :subslide:

- Alexander Bigerl 
- Fachgebiet
- Fachbiet Data Science
- Büro: Pohlweg, O4.216
- Email: bigerl@mail.upb.de
- Web: https://dice.cs.uni-paderborn.de/team/profiles/bigerl/
- Sprechstunde: Nach Vereinbarung 


** Wo sind wir? -- Gebäude O 


#+CAPTION: Lageplan Gebäude O 
#+ATTR_LATEX: :width 0.3\textwidth 
#+NAME: lageplan-O
[[./figures/gebauedeO.png]]


** Wer sind Sie? 

*** Fächer? 

- Informatik?
- Computer Engineering? 
- ...? 




***  Herkunft?							    :animate:
 
- Paderborn <20 km?
- 20km < Paderborn < 50km? 
- 50km < Paderborn? 

** Pingo 



Pingo: Plattform für Publikumsinteraktion 
- Zücken Sie Smartphone oder Laptop 
- Gehen Sie auf http://pingo.upb.de/311055 


*** QR-Code							    :nolatex:

#+CAPTION: QR-Code für GP1 in Pingo
#+ATTR_LaTeX: :width 0.75\linewidth
#+ATTR_LaTeX: :caption \caption{QR-Code für Pingo \label{fig:pingo}}
#+NAME: fig:pingo
[[./figures/pingo.png]]




** Pingo praktisch						    :nolatex:



#+BEGIN_SRC python :exports code
pingo_title = "Wo sind Sie her?" 
pingo_questions = ["Paderborn <20 km", "20km < Paderborn < 50km", "50km < Paderborn"]
pingo_duration = "120"

%pingo
#+END_SRC 





* Vorlesungsbetrieb 

** Wie funktioniert eine Vorlesung? 

- Ihre Vorstellung, Erwartung?

- Sinnvoll? 


** Bestandteile Programmierung 

- Vorlesung 
- Präsenzübungen 
- Hausübungen 
- Klausur 

** Vorlesung Programmierung                                        :subslide:
- Präsentation: Konzepte, Ansätze, Beispiele 
- Interaktiv soweit möglich
- Hoffentlich: Aufzeichnung 
- Notwendig: Vor- und Nachbereitung durch Sie!

** Vorlesung Programmierung -- Termine                             :subslide:

*** Regulär 

- Dienstag, 14:00 - 16:00 Uhr, L1
- Mittwoch, 14:00 - 16:00 Uhr, L1 
- Freitag, 11:00 - 13:00 Uhr, L1 
- Letzter Termin: *Voraussichtlich* 14.12.! (dann GPS)  

*** Ausfall							    :animate:

- 12.10, 23.11., 30.11. 

*** TODO Ersatz                                                     :animate:

- ??? 


** Hausübungen  -- Zweck 

- Lösen komplexer Aufgaben
- In Gruppenarbeit
- Bonuspunkte und Zulassungsvorausetzung für Klausur! 

*** Hausübungsblätter						      :notes:

Hausübungsblätter stellen Aufgaben zusammen, die den Inhalt der
Vorlesung wiederholen und vertiefen. Zusätzlich entsteht so 
Gelegenheit zur praktischen Übung.  

Der Schwierigkeitsgrad der Aufgaben auf Hausübungsblätter entspricht
in etwa dem, was Sie in Klausuren erwarten können. Teilweise sind 
aber auch komplexere Aufgaben dabei, die vom Zeitaufwand über das
hinausgehen, was in einer Klausur realistisch ist. Dies ist sinnvoll,
um Ihnen Gelegenheit zu geben, auch schwierigere Probleme anzugehen
und sinnvoll zu strukturieren.

** TODO Hausübungen -- Prozess                                     :subslide:

- Aufgaben werden ausgegeben
- Sie lösen, gemeinsam in einer Gruppe 
- Sie geben die Lösung ab
- Wir korrigieren und verteilen Punkte 
- Die Aufgaben werden in der *Zentralübung* besprochen
  - Termin: Dienstag, 13:00 - 14:00 Uhr
  - s.t. oder c.t.? 


#+NAME: hausblattprozess 
#+CAPTION: Hausblätter -- Der Prozess 
#+ATTR_LATEX: :width 0.75\textwidth 
[[./uml/hausblatt.png]]


** Hausübungen -- Termine                                          :subslide:

- Ausgabe erstes Blatt: 9.10.2018
- Abgabe: 16.10.2018, 12:30 (vor der Übung) 
- Besprechung erstes Blatt: 16.10.2018 
  - Dienstag, 13:00 -- 14:00, L1
  - (mit 15 oder 30 Minuten Pause?) 

** TODO Hausübungen -- Abgabe                                      :subslide:

- Nur web-basierte Abgabe der Lösungen 
  - Siehe: https://gp1.cs.uni-paderborn.de:8000
  - Das "s" ist wichtig! 
- Details zum System: später
  - Einführung: Erstes Präsenzblatt 

*** Hausübungen -- Abgabesystem					      :notes:

 Das System zur Abgabe und Korrektur der Übungsblätter basiert auf
 sog.  [[http://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/index.html][Jupyter Notebooks]] des [[http://jupyter.org][Projektes Jupyter]]. Damit können Sie
 einfach Text und Programmcode in einem beliebigen Web-Browser
 editieren und den Programmcode auch ausführen. Dabei ist ein
 sog. /Notebook/ das Dokument, mit dem Sie arbeiten. 

 Wir werden die Aufgaben als ein (oder mehrere) solche Notebooks zur
 Verfügung stellen. Nach Anmeldung können Sie diese Notebooks
 ausfüllen. Dabei werden wir sowohl nach Textantworten wie auch nach
 Programmcode fragen. 



** Hausübungen -- Plagiate					   :subslide:

- Abschreiben: *0 Punkte* auf das gesamte Blatt, für die ganze Gruppe! 
- Abschreiben lassen: *0 Punkte* auf das gesamte Blatt, für die ganze Gruppe! 
- Durch elektronische Abgabe sehr leicht zu entdecken! 

** Präsenzübungen 

- Zweck:
  - Unmittelbares Beantworten von Fragen
  - Üben!
  - Aktives Programmieren -- in der Gruppe, mit Tutor
- Präsenzübungen
  - Ergänzen die Hausübungen 
  - Finden wöchentlich statt 
  - Werden durch Tutor betreut
- Durch *Präsenzübungsblätter* strukturiert 

*** Präsenzübungsblätter					      :notes:

Präsenzübungsblätter dienen, ähnlich wie Hausübungsblätter, der
Wiederholung und Vertiefung des Vorlesungsstoffes. Die Aufgaben
unterscheiden sich stark im  Schwierigkeitsgrad, von einfacher Wiederholung
bis zu kniffligen Knobbelaufgaben. 

Sinnvollerweise bereiten Sie die Aufgaben der Präsenzblätter vor,
*bevor* Sie zur  Präsenzübung gehen. Sie müssen die Aufgaben nicht
vollständig gelöst haben, sollten aber soweit damit vertraut sein,
dass Sie einer Diskussion des Stoffes folgen können oder Fragen
gezielt vorbereitet haben. 

Zusätzlich handelt es sich ja um eine Programmiervorlesung -- Sie
sollen also programmieren lernen. Das lernen Sie am besten durch
programmieren. Sehen Sie also die Präsenzübungen als Gelegenheit zum
gemeinsamen programmieren an, mit Hilfestellung und Unterstützung
durch den Tutor.  

** TODO Präsenzübungen -- Termine                                  :subslide:



| Uhrzeit | Montag   | Dienstag | Mittwoch | Donnerstag | Freitag |
|---------+----------+----------+----------+------------+---------|
|    9-11 |          |          |          | PÜ (2x)    | PÜ (2x) |
|   11-13 |          | PÜ (2x)  | PÜ (2x)  |            | VL      |
|   13-14 |          | ZÜ       |          |            |         |
|   14-16 | PÜ  (3x) | VL       |          | PÜ (2x)    |         |
|   16-18 |          | PÜ (3x)  | VL       |            |         |


** Präsenzübungen -- Ort					   :subslide:

- Poolräume! Erdgeschoss Gebäude E 
- Mit Arbeitsplatzrechnern ausgestattet
- Frei zugänglich außerhalb der Tutorien
  - Weiterer Pool: Gebäude Fürstenallee, 1. Stock 


** Präsenzübungen -- Anmeldung					   :subslide:

*** IMT-Login und PAUL 
- Anmeldung in PAUL notwendig 
  - http://paul.uni-paderborn.de 
  - Dazu IMT-Login: http://serviceportal.upb.de

*** Probleme? Notebook-Cafe 

- [[https://imt.uni-paderborn.de/nbc/wo-ihr-uns-findet/][Notebook-Cafe]] hilft bei allgemeinen IT-Problemen
- In Raum I0.401
- Auch: gemeinsame Arbeitsräume 

*** IRB-Login							    :animate:
- Nutzung der Poolraum-Rechner freischalten
- Unter http://serviceportal.upb.de
  - *Betreuung*: Informatik-Rechnerbetrieb (IRB) 
  - *Dezentrale Dienste*: Rechnerzugang im Institut für Informatik
  - Nicht-EIM-Studierende: IRB Support ansprechen (E1.129) 
- Siehe auch:   [[https://cs.uni-paderborn.de/rechnerbetrieb-irb/infos-fuer-erstsemester/][IRB
  Infos für Erstsemester]]


*** Probleme? Guru-Räume 

- Bei Problemen mit IRB-Rechnern: Guru-Räume 
  - Campus (E0.129 & E1.106), meist 9-18
  - Fürstenallee (F2.510), meist 9-16


** Prüfung: Klausur 

- Schriftliche Prüfung
- *KEINE* Hilfsmittel!
- Zwei mögliche Termine
  - Voraussichtlich: (1) Mitte Januar (??); (2) Ende März 


** Klausur -- Zulassungsvoraussetzung 

Um an der Klausur teilnehmen zu dürfen, müssen Sie folgende
Zulassungsvoraussetzungen erfüllen: 

- Auf *mindestens* 7 der 9 (ggf. 10)  Übungsblätter *jeweils
  mindestens* 20% der 
  erreichbaren Punkte erzielen
  - Es genügt *nicht*,  in der Summe entsprechend viele Punkte zu
    haben 
- Siehe auch [[https://cs.uni-paderborn.de/cn/teaching/courses/grundlagen-der-programmierung-1-gp1/pruefung/][Webseite mit Prüfungsdetails]]

** Klausur -- Bonuspunkte 

- 50% der Punkte aller Hausblätter: 1 Notenschritt 
- 80% der Punkte aller Hausblätter: 2 Notenschritt 
- Voraussetzung: Klausur bestanden 

** Klausur -- Wie bestehen? 

- Vorlesung alleine reicht nicht!
- Übungen sind entscheidender Teil der Veranstaltung
  - Die VL soll Sie in die Lage versetzen, die Übungen zu bewältigen
  - Die Klausur prüft insbesondere auch den Inhalt der Übungen!


#+CAPTION: Der Weg zu Klausur- und Studienerfolg
#+ATTR_LaTeX: :width 0.75\linewidth
#+NAME: fig:klausur-erfolg
[[./uml/weg-zur-klausur.png]]


** Wo finden Sie was? 

 - PAUL: Anmeldung zu Übungen und Klausur
 - [[https://cs.uni-paderborn.de/index.php?id=59215][Webseite zur Veranstaltung]]
   - [[http://groups.uni-paderborn.de/fg-karl/lehre/ws1819/gp1/vorlesung/index.html][Vorlesungsmaterial]]
     - Notebooks: Folien der Vorlesung samt Code-Beispielen
     - PDFs: Folien und zusätzliche Anmerkungen und Kommentare; als Skript
       gedacht 
   - [[https://gp1.uni-paderborn.de:8000][Übungen]]
   - Video-Mitschnitte: auf
     [[https://videos.uni-paderborn.de][Video-Portal der UPB]]
     (Channel-Name noch offen) 



** Wo finden Sie was? -- Webseite                                   :nolatex:

#+CAPTION: Webseite der Vorlesung
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:webseite-qr
[[./figures/vorlesung-qr.png]]


** Wo finden Sie was? -- Material                                   :nolatex:


#+CAPTION: Materialien zur Vorlesung
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:material-qr
[[./figures/groups-qr.png]]


** Lernzentrum Informatik  (LZI) 

- Für weitere Unterstützung: [[https://cs.uni-paderborn.de/studium/beratung-und-unterstuetzung/lernzentrum/][LZI]]
  - Lernräume mit Betreuung durch Tutoren: fachlich, methodisch,
    Arbeitsorganisation, ...
  - Seminare, Workshops zur Studiengestaltung 

** Lernzentrum Informatik  (LZI)				    :nolatex:


#+CAPTION: Lernzentrum Informatik 
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:lzi-qr
[[./figures/lzi-qr.png]]


** Erwartungshaltung: Sie an uns 

- ... ? 

** Erwartungshaltung: Wir an Sie 

- Aktive Beteiligung
  - In Vorlesung, Übung, ...
  - Fragen Sie! Niemand ist Telepath!
- Vor- und Nacharbeit
- Anwesenheit 
- Üben! Üben! Üben!


* Zusammenfassung 

** Zusammenfassung 
- Vorlesungen haben Organisationsaufwand :-) 




