#+INCLUDE: "../template/header.org" :minlevel 2
#+TITLE: Kapitel 0: Organisation 

#+STARTUP: showeverything
# TODO states: looks like this has to go on main file and cannot be
# included 
#+TODO: TODO(t) | UEBUNG(u) DONE(d)
#+OPTIONS: tasks:todo


* Vorstellung 
** Setup 						  :skipslide:nolatex:
   
Main point here is to set up warnings properly for presentation and to
load tutormagic, so that we can later on use pythontutor for code
animations. 
   
#+BEGIN_SRC  python 
%load_ext tutormagic
import warnings
warnings.filterwarnings('ignore', category=DeprecationWarning, module='.*/IPython/.*')

import requests
import webbrowser
from IPython.core.magic import register_line_magic


pingo_host = "https://pingo.coactum.de/"
pingo_token = "BRx9QJP7rjdUGBq3x4hP"
pingo_session = "538312"


# Test-Session: 
pingo_url = pingo_host + "events/" + pingo_session + "/quick_start.json"
# Produktiv-Session: 
# pingo_url = "https://pingo.upb.de/events/204051/quick_start.json"

pingo_duration = '60'
pingo_type = "single"

@register_line_magic
def pingo(line):
    params = {'survey_name': pingo_title, 
              'predef_options': pingo_questions, 
              'q_type': pingo_type,
              'duration': pingo_duration, 
              'auth_token': pingo_token}

    r = requests.post(pingo_url, json=params)


    # session id not found
    if r.status_code == 404: 
        print ("404 error: session id not found")

    # wrong auth token
    elif r.status_code == 401:
        print (r.content)

    # e.g. not access to this session
    elif r.status_code == 200:
        print (r.content)

    # ok
    elif r.status_code == 201:
        webbrowser.open_new_tab(pingo_host + r.headers['Location'])

    # e.g. wrong parameters
    elif r.status_code == 500:
        print ("500 error: e.g. wrong parameters")

    # some other problem
    else:
        print (r.status_code)
#+END_SRC





** Herzlich Willkommen!

- an der Universität Paderborn 
- zum Studium der Informatik, des Computer Engineerings, ...
- zur Vorlesung  Programmierung 

** Wer sind wir? 

- Dozent: Holger Karl
- Mitarbeiter/Übungen: Alexander Bigerl, Mohamed Sherif 



** Wer sind wir?  -- Dozent					   :subslide:

- Holger Karl 
  - Fachgebiet Rechnernetze 
  - Büro: O3.158  
  - Email: holger.karl@upb.de
  - Web: http://www.upb.de/cs/cn
  - Sprechstunde: Montag, 13:00 - 14:00 Uhr 

** Wer sind wir? -- Mitarbeiter					   :subslide:

- Alexander Bigerl 
  - Fachgebiet Data Science
  - Büro: Technologiepark, TP6.3.108
  - Email: bigerl@mail.upb.de
  - Web: https://www.uni-paderborn.de/person/72857/
  - Sprechstunde: Mo 14:00-16:00 Uhr 


** Wer sind wir? -- Mitarbeiter					   :subslide:

- Mohamed Sherif 
  - Fachgebiet Data Science
  - Büro: Technologiepark, TP 6.3.306
  - Email: mohamed.sherif@upb.de 
  - Web: https://dice-research.org/team/profiles/sherif/
  - Sprechstunde: Nach Vereinbarung 



** Wo sind wir? -- Gebäude O 


#+CAPTION: Lageplan Gebäude O 
#+ATTR_LATEX: :width 0.3\textwidth 
#+NAME: lageplan-O
[[./figures/gebauedeO.png]]




** Hilfe 

*** Wie bekomme ich Hilfe? 

- Vom Tutor Ihrer Übungsgruppe
- Von uns, in Vorlesung und Zentralübung
- *Vor allem*: prog19@mail.upb.de !
  - Von mehreren Tutoren betreut; beste Reaktionszeit! 


*** Wie bekomme ich KEINE Hilfe? 

- Durch Nachricht in PAUL (die werden ignoriert)
- Durch persönliche Nachricht an uns (die werden irgendwann an
  prog19@mail.upb.de weitergeleitet) 

** Wer sind Sie? 

*** Fächer? 

- Informatik?
- Computer Engineering? 
- ...? 




***  Herkunft?							    :animate:
 
- Paderborn <20 km?
- 20km < Paderborn < 50km? 
- 50km < Paderborn? 

** Pingo 



Pingo: Plattform für Publikumsinteraktion 
- Zücken Sie Smartphone oder Laptop 
- Gehen Sie auf http://pingo.upb.de/538312


*** QR-Code                                                    :nolatex:

#+CAPTION: QR-Code für GP1 in Pingo
#+ATTR_LaTeX: :width 0.75\linewidth
#+ATTR_LaTeX: :caption \caption{QR-Code für Pingo \label{fig:pingo}}
#+NAME: fig:pingo
[[./figures/pingo.png]]




** Pingo praktisch						    :nolatex:



#+BEGIN_SRC python :exports code
pingo_title = "Wo sind Sie her?" 
pingo_questions = ["Paderborn <20 km", "20km < Paderborn < 50km", "50km < Paderborn"]
pingo_duration = "120"

%pingo
#+END_SRC 





* Vorlesungsbetrieb 

** Wie funktioniert eine Vorlesung? 

- Ihre Vorstellung, Erwartung?

- Sinnvoll? 


** Bestandteile Programmierung 

- Vorlesung 
- Präsenzübungen 
- Hausübungen 
- Klausur 

** Vorlesung Programmierung                                        :subslide:
- Präsentation: Konzepte, Ansätze, Beispiele 
- Interaktiv soweit möglich
- Voraussichtlich: Video-Aufzeichnung (aber keine Garantie!) 
- Notwendig: Vor- und Nachbereitung durch Sie!

** Vorlesung Programmierung -- Termine                             :subslide:

*** Regulär 

- Dienstag, 14:00 - 16:00 Uhr, L1
- Mittwoch, 14:00 - 16:00 Uhr, L1 
- Freitag, 11:00 - 13:00 Uhr, L1 
- Letzter Termin: *Voraussichtlich* 13.12.! (dann VL GPS)  

*** Ausfall							    :animate:

- 1. 11.

*** Ersatz                                                     :animate:

- 21.10., 18:00 (s.t.) - 19:30, L2 


** Hausübungen  -- Zweck 

- Lösen komplexer Aufgaben
- In Gruppenarbeit
- Bonuspunkte und Zulassungsvorausetzung für Klausur! 

*** Hausübungsblätter						      :notes:

Hausübungsblätter stellen Aufgaben zusammen, die den Inhalt der
Vorlesung wiederholen und vertiefen. Zusätzlich entsteht so 
Gelegenheit zur praktischen Übung.  

Der Schwierigkeitsgrad der Aufgaben auf Hausübungsblätter entspricht
in etwa dem, was Sie in Klausuren erwarten können. Teilweise sind 
aber auch komplexere Aufgaben dabei, die vom Zeitaufwand über das
hinausgehen, was in einer Klausur realistisch ist. Dies ist sinnvoll,
um Ihnen Gelegenheit zu geben, auch schwierigere Probleme anzugehen
und sinnvoll zu strukturieren.

** Hausübungen -- Prozess					   :subslide:

- Aufgaben werden ausgegeben
- Sie lösen, gemeinsam in einer Gruppe 
- Sie geben die Lösung ab
- Wir korrigieren und verteilen Punkte 
- Die Aufgaben werden in der *Zentralübung* besprochen
  - Termin: Dienstag, 13:00 - 14:00 Uhr
  - s.t. oder c.t.? 


#+NAME: hausblattprozess 
#+CAPTION: Hausblätter -- Der Prozess 
#+ATTR_LATEX: :width 0.75\textwidth 
[[./uml/hausblatt.png]]


** Hausübungen -- Termine                                          :subslide:

- Ausgabe erstes Blatt: 14.10.2019
- Abgabe: 20.10.2019, 23:59
  - Generell: Sonntag, 23:59 
- Besprechung erstes Blatt: Zentralübung 21.10.2018 


** Hausübungen -- Abgabe					   :subslide:

- Nur *web-basierte* Abgabe der Lösungen 
  - Siehe: https://gp1.cs.uni-paderborn.de:8000
  - Das "s" ist wichtig! 
- Details zum System: später
  - Einführung: Erstes Präsenzblatt
- *WICHTIG*: /Rechnernutzung Informatik/ in Service-Profile eingetragen!
  - Siehe: https://sp.uni-paderborn.de 

*** Hausübungen -- Abgabesystem					      :notes:

 Das System zur Abgabe und Korrektur der Übungsblätter basiert auf
 sog.  [[http://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/index.html][Jupyter Notebooks]] des [[http://jupyter.org][Projektes Jupyter]]. Damit können Sie
 einfach Text und Programmcode in einem beliebigen Web-Browser
 editieren und den Programmcode auch ausführen. Dabei ist ein
 sog. /Notebook/ das Dokument, mit dem Sie arbeiten. 

 Wir werden die Aufgaben als ein (oder mehrere) solche Notebooks zur
 Verfügung stellen. Nach Anmeldung können Sie diese Notebooks
 ausfüllen. Dabei werden wir sowohl nach Textantworten wie auch nach
 Programmcode fragen. 



** Hausübungen -- Plagiate					   :subslide:

- Abschreiben oder abschreiben lassen:
  - *KEINE* Klausurteilnahme! Sie verlieren ein Jahr! 
  - Meldung an Prüfungsausschuss 
- Durch elektronische Abgabe sehr leicht zu entdecken! 

** Präsenzübungen 

- Zweck:
  - Unmittelbares Beantworten von Fragen
  - Üben!
  - Aktives Programmieren -- in der Gruppe, mit Tutor
- Präsenzübungen
  - Ergänzen die Hausübungen 
  - Finden wöchentlich statt 
  - Werden durch Tutor betreut
- Durch *Präsenzübungsblätter* strukturiert 

*** Präsenzübungsblätter					      :notes:

Präsenzübungsblätter dienen, ähnlich wie Hausübungsblätter, der
Wiederholung und Vertiefung des Vorlesungsstoffes. Die Aufgaben
unterscheiden sich stark im  Schwierigkeitsgrad, von einfacher Wiederholung
bis zu kniffligen Knobbelaufgaben. 

Sinnvollerweise bereiten Sie die Aufgaben der Präsenzblätter vor,
*bevor* Sie zur  Präsenzübung gehen. Sie müssen die Aufgaben nicht
vollständig gelöst haben, sollten aber soweit damit vertraut sein,
dass Sie einer Diskussion des Stoffes folgen können oder Fragen
gezielt vorbereitet haben. 

Zusätzlich handelt es sich ja um eine Programmiervorlesung -- Sie
sollen also programmieren lernen. Das lernen Sie am besten durch
programmieren. Sehen Sie also die Präsenzübungen als Gelegenheit zum
gemeinsamen programmieren an, mit Hilfestellung und Unterstützung
durch den Tutor.  

** Präsenzübungen -- Termine laut PAUL                             :subslide:

*Beginn*: 14.10.! 


| Uhrzeit | Montag  | Dienstag | Mittwoch | Donnerstag | Freitag |
|---------+---------+----------+----------+------------+---------|
|    9-11 |         | PÜ (2x)  | PÜ (2x)  | PÜ (2x)    | PÜ (2x) |
|   11-13 |         |          | PÜ (2x)  |            | VL      |
|   13-14 |         | ZÜ       |          |            |         |
|   14-16 | PÜ (2x) | VL       | VL       | PÜ(2x)     | PÜ (2x) |
|   16-18 | PÜ (2x) |          |          | PÜ(2x)     |         |
|   18-20 | VL (!)  |          |          |            |         |


** Präsenzübungen und PAUL-Termine 

- Es ist nicht besonders wichtig, zu welcher Gruppe Sie sich in PAUL
  angemeldet haben
- Dient lediglich dazu, die einzelnen Gruppen ungefähr gleich groß zu
  halten
- Abgabe der Hausübungen unabhängig von Übungsgruppe! 


** Präsenzübungen -- Start 

- Veröffentlichung: Montag, 9:00 Uhr
- Erstes Blatt: 14.10. 

** Präsenzübungen -- Ort					   :subslide:

- Poolräume! Erdgeschoss Gebäude E 
- Mit Arbeitsplatzrechnern ausgestattet
- Frei zugänglich außerhalb der Tutorien
  - Weiterer Pool: Gebäude Fürstenallee, 1. Stock 


** Präsenzübungen -- Anmeldung					   :subslide:

*** IMT-Login und PAUL 
- Anmeldung in PAUL notwendig 
  - http://paul.uni-paderborn.de 
  - Dazu IMT-Login: http://serviceportal.upb.de

*** Probleme? Notebook-Cafe 

- [[https://imt.uni-paderborn.de/nbc/wo-ihr-uns-findet/][Notebook-Cafe]] hilft bei allgemeinen IT-Problemen
- In Raum I0.401
- Auch: gemeinsame Arbeitsräume 

*** IRB-Login							    :animate:
- Nutzung der Poolraum-Rechner freischalten
- Unter http://serviceportal.upb.de
  - *Betreuung*: Informatik-Rechnerbetrieb (IRB) 
  - *Dezentrale Dienste*: Rechnerzugang im Institut für Informatik
  - Nicht-EIM-Studierende: IRB Support ansprechen (E1.129) 
- Siehe auch:   [[https://cs.uni-paderborn.de/rechnerbetrieb-irb/infos-fuer-erstsemester/][IRB
  Infos für Erstsemester]]


*** Probleme? Guru-Räume 

- Bei Problemen mit IRB-Rechnern: Guru-Räume 
  - Campus (E0.129 & E1.106), meist 9-18
  - Fürstenallee (F2.510), meist 9-16


** Prüfung: Klausur 

- Schriftliche Prüfung
- *KEINE* Hilfsmittel!
- Zwei Stunden
- Fragen zu Konzepten, Beispielprogramme schreiben, Fehler finden, ... 

** Klausurtermine 

- Zwei Termine in diesem Semester 
- Termin 1:
  - Option 1: Mitte Januar, z.B. Samstag 11. Januar ? 
  - Option 2: Mitte Februar, mit Klausuren Modellierung, Analysis +/-
    3 Tage drumherum
- Termin 2: Mitte März 


** Klausur -- Zulassungsvoraussetzung 

Um an der Klausur teilnehmen zu dürfen, müssen Sie folgende
Zulassungsvoraussetzungen erfüllen ("Studienleistung"): 

- Auf *mindestens* 7 der 9 Hausübungsblätter *jeweils
  mindestens* 20% der 
  erreichbaren Punkte erzielen
  - Es genügt *nicht*,  in der Summe entsprechend viele Punkte zu
    haben 
- Siehe auch [[https://cs.uni-paderborn.de/cn/teaching/courses/grundlagen-der-programmierung-1-gp1/pruefung/][Webseite mit Prüfungsdetails]]

** Klausur -- Bonuspunkte 

- 50% der Punkte aller Hausblätter: 1 Notenschritt 
- 80% der Punkte aller Hausblätter: 2 Notenschritt 
- Voraussetzung: Klausur bestanden 

** Klausur -- Wie bestehen? 

- Vorlesung alleine reicht nicht!
- Übungen sind entscheidender Teil der Veranstaltung
  - Die VL soll Sie in die Lage versetzen, die Übungen zu bewältigen
  - Die Klausur prüft insbesondere auch den Inhalt der Übungen!


#+CAPTION: Der Weg zu Klausur- und Studienerfolg
#+ATTR_LaTeX: :width 0.75\linewidth
#+NAME: fig:klausur-erfolg
[[./uml/weg-zur-klausur.png]]


** PAUL: Anmeldungen 

*VIER* Anmeldungen in PAUL erforderlich! 

- Anmeldung zum Modul 
- Anmeldung zur Lehrveranstaltung selbst / zur Übungsgruppe
- Anmeldung zur Studienleistung (!!!)
- Anmeldung zur Prüfung

*JEDE* Anmeldung braucht *zwei* Klicks 
- *Anmelden* und *Abschicken* 

*Daumenregel*: Wenn Sie sich in einer LV für etwas anmelden können, dann tun Sie das 


** PAUL: Fristen 

- Revisionsphase: Endet 25.10.2019. An- und Abmelden von Lehrveranstaltungen 
- Studienleistung:
  - Anmelden von 21.10.2019 bis 21.11.2019
  - Abmelden regulär bis 17.1.2019 (aber das funktioniert für diese VL nicht!)
- Prüfung
  - Anmelden erster Termin: 21.10. bis 21.11.
  - Anmelden zweiter Termin: 2.3. bis 6.3.
    - Auch möglich, wenn nicht zum ersten Termin angemeldet 
  - Abmelden: bis eine Woche vor Prüfungstermin

** Wo finden Sie was? 

 - PAUL: Anmeldung zu Übungen und Klausur
 - [[https://cs.uni-paderborn.de/cn/teaching/courses/programmierung/][Webseite zur Veranstaltung]]
   - [[http://groups.uni-paderborn.de/fg-karl/lehre/ws1920/prog/vorlesung/index.html][Vorlesungsmaterial]]
     - Notebooks: Folien der Vorlesung samt Code-Beispielen
     - PDFs: Folien und zusätzliche Anmerkungen und Kommentare; als Skript
       gedacht 
   - [[https://prog.cs.upb.de][Übungen]] : https://prog.cs.upb.de 
   - Video-Mitschnitte: auf
     [[https://videos.uni-paderborn.de][Video-Portal der UPB]]
     (Channel-Name noch offen)
     - Bei Problemen mit Videos: Mail an imt@upb.de!
 - 
    [[https://cs.uni-paderborn.de/studium/beratung-und-unterstuetzung/fachberatung/][Fachberatung Informatik]] - für formale Prozesse, Probleme, ...
   - [[https://cs.uni-paderborn.de/fileadmin/informatik/Studium/Beratung_und_Unterstuetzung/Fachberatung/Regeln_zu_Anmeldungen_und_Pruefungen_Winter_2019_de.pdf][Hinweise zum Wintersemester 19/20]]



** Wo finden Sie was? -- Webseite                                   :nolatex:

#+CAPTION: Webseite der Vorlesung
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:webseite-qr
[[./figures/vorlesung-qr.png]]


** Wo finden Sie was? -- Material                                   :nolatex:


#+CAPTION: Materialien zur Vorlesung
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:material-qr
[[./figures/groups-qr.png]]


** Lernzentrum Informatik  (LZI) 

- Für weitere Unterstützung: [[https://cs.uni-paderborn.de/studium/beratung-und-unterstuetzung/lernzentrum/][LZI]]
  - Lernräume mit Betreuung durch Tutoren: fachlich, methodisch,
    Arbeitsorganisation, ...
  - Seminare, Workshops zur Studiengestaltung 

** Lernzentrum Informatik  (LZI)				    :nolatex:


#+CAPTION: Lernzentrum Informatik 
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:lzi-qr
[[./figures/lzi-qr.png]]


** Erwartungshaltung: Sie an uns 

- ... ? 

** Erwartungshaltung: Wir an Sie 

- Aktive Beteiligung
  - In Vorlesung, Übung, ...
  - Fragen Sie! Niemand ist Telepath!
- Vor- und Nacharbeit
- Anwesenheit 
- Üben! Üben! Üben!


* Zusammenfassung 

** Zusammenfassung 
- Vorlesungen haben Organisationsaufwand :-) 




